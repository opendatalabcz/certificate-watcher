x-defaults:
  rabbitmq-env-base: &rabbitmq-env-base
    RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
    RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
#    RABBITMQ_DEFAULT_USER: guest
#    RABBITMQ_DEFAULT_PASS: guest

  rabbitmq-env-default: &rabbitmq-env-default
    <<: *rabbitmq-env-base

  postgres-env-base: &postgres-env-base
    POSTGRES_USER: "${POSTGRES_USER}"
    POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

  postgres-env-default: &postgres-env-default
    <<: *postgres-env-base

  certificate-processor-default: &certificate-processor-default
    build:
      context: "services/certificate-processor"
    environment:
      <<: [*postgres-env-default, *rabbitmq-env-default]
      RABBITMQ_QUEUE: "cert-processor-default"
      ALGORITHM: "simple"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "${PROJECT_PATH}/config/:/config/:ro"
      - "${PROJECT_PATH}/services/commons/:/app/src/commons/:ro"
    depends_on:
      - rabbitmq
      - certificate-stream
      - postgres

services:
  postgres:
    image: postgres:16.1
    restart: always
    ports:
      - "5432:5432"
    environment:
      <<: *postgres-env-base
    volumes:
      - "${PROJECT_PATH}/services/postgres/data:/var/lib/postgresql/data"
      - "${PROJECT_PATH}/services/postgres/init-scripts:/docker-entrypoint-initdb.d"
      - "${PROJECT_PATH}/services/postgres/conf/postgresql.conf:/etc/postgresql/postgresql.conf"

  rabbitmq:
    image: rabbitmq:3.12-management
    restart: always
    platform: linux/x86_64
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      <<: *rabbitmq-env-base
#    volumes:
#      - "${RABBITMQ_PATH}/rabbitmq/data:/var/lib/rabbitmq"
#      - "${RABBITMQ_PATH}/rabbitmq/conf/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"
#      - "${RABBITMQ_PATH}/rabbitmq/conf/enabled_plugins:/etc/rabbitmq/enabled_plugins"

  settings-setup:
    container_name: settings-setup
    build:
      context: "services/settings-setup"
    environment:
      <<: *postgres-env-default
    volumes:
      - "${PROJECT_PATH}/config/:/config/:ro"
      - "${PROJECT_PATH}/services/commons/:/app/src/commons/:ro"
    depends_on:
      - postgres

  certificate-stream:
    container_name: certificate-stream
    build:
      context: "services/certificate-stream"
    environment:
      <<: *rabbitmq-env-default
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "${PROJECT_PATH}/config/:/config/:ro"
      - "${PROJECT_PATH}/services/commons/:/app/src/commons/:ro"
    depends_on:
      - rabbitmq

  certificate-processor-lev-1:
    <<: *certificate-processor-default
    container_name: certificate-processor-lev-1
    environment:
      <<: [*postgres-env-base, *rabbitmq-env-default]
      ALGORITHM: "levenshtein"
      RABBITMQ_QUEUE: "cert-processor-levenshtein"

  certificate-processor-lev-2:
    <<: *certificate-processor-default
    deploy:
      replicas: 5
    environment:
      <<: [ *postgres-env-base, *rabbitmq-env-default ]
      ALGORITHM: "levenshtein"
      RABBITMQ_QUEUE: "cert-processor-levenshtein"

  certificate-processor-simple-1:
    <<: *certificate-processor-default
    container_name: certificate-processor-simple-1
    environment:
      <<: [*postgres-env-base, *rabbitmq-env-base]
      ALGORITHM: "simple"
      RABBITMQ_QUEUE: "cert-processor-simple"

networks:
  default:
    external: true
    name: "certificate-watcher-net"